---
- hosts: all
  gather_facts: no
  vars:
    node_version: 7.5.0
    node_dir: /home/ubuntu/.nvm/versions/node/v7.5.0

  tasks:
    - name: Add the postgresql repository to get latest version
      become: yes
      apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main
        state: present
    - name: ensure apt cache is up to date
      become: yes
      apt: update_cache=yes cache_valid_time=3600
    - name: ensure packages are installed
      become: yes
      apt: name={{item}} force=yes
      with_items:
        - libpq-dev
        - python-psycopg2
        - git
        - curl
        - build-essential
        - libssl-dev
        - nginx
        - postgresql-9.6
        - postgresql-contrib-9.6

    - name: Download nvm
      get_url:
        url: https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh
        dest: /tmp/nvm-install.sh

    - name: Install nvm
      command: /bin/bash /tmp/nvm-install.sh creates=~/.nvm

    - name: Install node and set version
      shell: >
        /bin/bash -c "source ~/.nvm/nvm.sh && nvm install {{ node_version }} && nvm alias default {{ node_version }} && nvm use {{ node_version }}"
        creates=/home/ubuntu/.nvm/alias

    - name: Install app dependencies with npm
      command: /bin/bash -c "cd /vagrant && source ~/.nvm/nvm.sh && {{ node_dir }}/bin/npm install --no-bin-links"

    - name: Copy nginx configuration
      become: yes
      copy:
        src: ../templates/nginx-default
        dest: /etc/nginx/sites-available/default

    - name: Restart nginx
      become: yes
      service:
        name: nginx
        state: restarted

    # Create a new database with name "acme" and specific encoding and locale
    # settings. If a template different from "template0" is specified, encoding
    # and locale settings must match those of the template.
    - name: Ensure database exists
      become: yes
      become_user: postgres
      postgresql_db:
        name: directorio
        encoding: UTF-8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8

    - name: Run database baseline file
      become: yes
      become_user: postgres
      command: >
        psql -d directorio -a -f /vagrant/db/baseline.sql
        
    - name: Run database change scripts
      become: yes
      become_user: postgres
      command: >
        psql -d directorio -a -f {{ item }}
      with_fileglob:
        /vagrant/db/2*.sql

    - name: Create a password for the postgres database user
      become: yes
      become_user: postgres
      postgresql_user:
        db: directorio
        name: postgres
        password: postgres

    - name: Ensure there is an alias for the rundevserver command
      lineinfile:
        dest: /home/ubuntu/.bashrc
        line: "alias devrunserver='node /vagrant/api/api.js 3000'"
        owner: ubuntu
        regexp: "^alias devrunserver='node /vagrant/api/api.js 3000'$"
        state: present
        insertafter: EOF
        create: True

    - name: Ensure there is an alias for the devpsql command
      lineinfile:
        dest: /home/ubuntu/.bashrc
        line: "alias devpsql='sudo -u postgres psql -d directorio'"
        owner: ubuntu
        regexp: "^alias devpsql='sudo -u postgres psql -d directorio'$"
        state: present
        insertafter: EOF
        create: True
